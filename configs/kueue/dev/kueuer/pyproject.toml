[project]
name = "kueuer"
version = "0.1.0"
description = "K8s Kueue Testing"
readme = "README.md"
authors = [
    { name = "Shiny Brar", email = "shiny.brar@nrc-cnrc.gc.ca" }
]
requires-python = ">=3.9"
dependencies = [
    "aiofiles>=24.1.0",
    "httpx>=0.28.1",
    "ipython>=8.18.1",
    "logfire[httpx]>=3.7.1",
    "nest-asyncio>=1.6.0",
    "pydantic>=2.10.6",
    "pyyaml>=6.0.2",
    "skaha",
    "typer>=0.15.2",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv.sources]
skaha = { git = "https://github.com/shinybrar/skaha.git", branch = "CADC-14066-scaling-issues" }

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "W",   # pycodestyle warnings
    "C90", # mccabe complexity
    "N",   # pep8-naming
    "D",   # pydocstyle
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "A",   # flake8-builtins
    "C4",  # flake8-comprehensions
    "ISC", # flake8-implicit-str-concat
    "T20", # flake8-print
    "PT",  # flake8-pytest-style
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "ARG", # flake8-unused-arguments
    "ERA", # eradicate
    "PL",  # pylint
    "PIE", # flake8-pie
    "PYI", # flake8-pyi
    "TID", # flake8-tidy-imports
    "TCH", # flake8-type-checking
    "RUF", # ruff-specific rules
]
ignore = [
    "D203",  # one-blank-line-before-class (conflicts with D211)
    "D212",  # multi-line-summary-first-line (conflicts with D213)
]

[tool.ruff.lint.isort]
known-first-party = ["your_package_name"]
case-sensitive = true

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pydocstyle]
convention = "google"
ignore-decorators = ["typing.overload", "overload"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["D", "ARG001"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
pythonpath = ["."]
